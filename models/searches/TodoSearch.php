<?php

namespace app\models\searches;

use app\models\Todo;
use yii\base\Model;
use yii\data\ActiveDataProvider;

/**
 * TodoSearch represents the model behind the search form of `\app\models\Todo`.
 */
class TodoSearch extends Todo
{
    public static $spec = ['day', 'week'];
    public $startTime;
    public $endTime;


    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['id'], 'integer'],
            [['timestamp', 'text'], 'safe'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function scenarios()
    {
        // bypass scenarios() implementation in the parent class
        return Model::scenarios();
    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = Todo::find();

        // add conditions that should always apply here

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);

        $this->load($params);

        if (!$this->validate()) {
            // uncomment the following line if you do not want to return any records when validation fails
            // $query->where('0=1');
            return $dataProvider;
        }

        // grid filtering conditions
        $query->andFilterWhere([
            'id' => $this->id,
        ]);

            switch ($this->timestamp) {
                case  'day':
                    $query->andFilterWhere(['between', 'timestamp', $this->startTime = strtotime(date('d.m.Y 00:00:00')), $this->endTime =strtotime(date('d.m.Y 23:59:59'))]);
                    break;
                case  'week':
                    $query->andFilterWhere(['between', 'timestamp', $this->startTime =  strtotime('Mon this week'), $this->endTime = strtotime('Sun this week')]);
                    break;
                case  '-week':
                    $query->andFilterWhere(['between', 'timestamp', $this->startTime = strtotime('Mon last week'), $this->endTime =strtotime('Sun last week')]);
                    break;
                case  '+week':
                    $query->andFilterWhere(['between', 'timestamp', $this->startTime = strtotime('Mon next week'), $this->endTime =strtotime('Sun next week')]);
                    break;
                default:
                    $query->andFilterWhere(['like', 'timestamp', $this->startTime =$this->endTime =$this->timestamp]);

            }

        $query->andFilterWhere(['like', 'text', $this->text]);

        return $dataProvider;
    }

    public function init()
    {
        // parent::init(); // TODO: Change the autogenerated stub
    }
}
